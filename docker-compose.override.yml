version: '3.4'

services:
  mysql-transfer:
    container_name: mysql-transfer
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: banking-operation-transfer
    ports:
      - "3308:3306"
    volumes:
      - "./scripts/create-transfer-table.sql:/docker-entrypoint-initdb.d/1.sql"

  zookeeper:
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      
  broker:
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      
  banking.operation.transfer.command.api:
    container_name: transfer.command.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:DefaultConnection=server=mysql-transfer;port=3306;user=root;password=1234;database=banking-operation-transfer"
      - "ClientApi:Url=http://banking.operation.client.api:80/v1/banking-operation"
      - "ContactApi:Url=http://banking.operation.contact.api:80/v1/banking-operation"
      - "TransactionApi:Url=http://banking.operation.transaction.api:80/v1/banking-operation"
      - "BalanceApi:Url=http://banking.operation.balance.query.api:80/v1/banking-operation"
      - "KafkaParameters:BootstrapServers=broker:9092"
    depends_on:
      - mysql-transfer
      - broker
    ports:
      - "8004:80"
